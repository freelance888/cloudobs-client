name: PROD | Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "feature/adding-cicd" ]
  pull_request:
    branches: [ "feature/adding-cicd" ]


  repository_dispatch:
    types: PROD_DEPLOY

env:
    PROD_HOST: app@${{ secrets.PROD_HOST_IP }}
    PRIVATE_SSH_KEY: ${{ secrets.PRIVATE_SSH_KEY }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build the Docker image
      run: |
        docker build -t ${{ github.event.repository.name }} . --no-cache
        docker save ${{ github.event.repository.name }} > ${{ github.event.repository.name }}.tar
        ls -1

    - name: Saving docker image to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: |
          ${{ github.event.repository.name }}.tar
          docker-compose.yml
        retention-days: 2

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Restoring docker image from artifacts
      uses: actions/download-artifact@v3
      with:
        name: docker-image

    - name: Uploading artifact to the server
      run: |
        ls -1
        which rsync || ( apt-get update -y && apt-get install rsync -y )
        which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
        eval $(ssh-agent -s)
        echo "${PRIVATE_SSH_KEY}" | tr -d '\r' | ssh-add - > /dev/null
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        ssh ${PROD_HOST} docker image rm -f $(docker images --filter=reference="${{ github.event.repository.name }}:*" -q) &
        rsync -a -v --progress --delete --quiet docker-compose.yml ${{ github.event.repository.name }}.tar ${PROD_HOST}:~
        ssh ${PROD_HOST} docker load --input ${{ github.event.repository.name }}.tar
        ssh ${PROD_HOST} "docker-compose down && docker-compose up -d && sleep 10 && docker-compose ps"

  # debug:
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Uploading artifact to the server
  #     run: |
  #       which rsync || ( apt-get update -y && apt-get install rsync -y )
  #       which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
  #       eval $(ssh-agent -s)
  #       echo "${PRIVATE_SSH_KEY}" | tr -d '\r' | ssh-add - > /dev/null
  #       mkdir -p ~/.ssh
  #       chmod 700 ~/.ssh
  #       echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  #       ssh ${PROD_HOST} docker system prune -af &
  #       rsync -a -v --progress --delete --quiet docker-compose.yaml ${{ github.event.repository.name }}.tar ${PROD_HOST}:~
  #       ssh ${PROD_HOST} docker load ${{ github.event.repository.name }}.tar
  #       ssh ${PROD_HOST} "docker-compose down && docker-compose up -d && sleep 10 && docker-compose ps"
